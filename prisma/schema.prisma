// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enums para campos con valores fijos
enum TipoCliente {
  NATURAL
  EMPRESA
}

enum EstadoOrden {
  PENDIENTE
  ENTREGADO
}

enum MetodoPago {
  EFECTIVO
  TRANSFERENCIA
  PAGO_MOVIL
}

enum Moneda {
  USD
  VES
  COP
}

// Modelo Cliente
model Cliente {
  id             Int       @id @default(autoincrement())
  tipo           TipoCliente
  nombre         String
  apellido       String
  telefono       String
  telefono_secundario  String?
  direccion      String
  identificacion String
  email          String?   
  fechaRegistro  DateTime  @default(now())
  ordenes        Orden[]
}

// Modelo Servicio (para cat√°logo de precios)
model Servicio {
  id             Int     @id @default(autoincrement())
  nombreServicio String
  precioBase     Float
  descripcion    String?
  detalleOrdenes DetalleOrden[]
}

// Modelo Orden
model Orden {
  id            Int            @id @default(autoincrement())
  clienteId     Int
  fechaIngreso  DateTime       @default(now())
  fechaEntrega  DateTime?
  estado        EstadoOrden
  total         Float
  observaciones String?
  abonado       Float          @default(0)           
  faltante      Float          @default(0)           
  estadoPago    String         @default("INCOMPLETO")
  cliente       Cliente        @relation(fields: [clienteId], references: [id])
  detalles      DetalleOrden[]
  pagos         Pago[]
}

// Modelo DetalleOrden
model DetalleOrden {
  id           Int     @id @default(autoincrement())
  ordenId      Int
  servicioId   Int
  cantidad     Int
  precioUnit   Float
  subtotal     Float
  orden        Orden   @relation(fields: [ordenId], references: [id])
  servicio     Servicio @relation(fields: [servicioId], references: [id])
}

model Pago {
  id          Int           @id @default(autoincrement())
  ordenId     Int
  monto       Float
  moneda      Moneda
  metodoPago  MetodoPago
  nota        String?       @db.Text
  fechaPago   DateTime      @default(now())
  orden       Orden         @relation(fields: [ordenId], references: [id])
  vueltos     VueltoEntregado[]
}

model VueltoEntregado {
  id        Int    @id @default(autoincrement())
  pagoId    Int
  monto     Float
  moneda    String
  pago      Pago   @relation(fields: [pagoId], references: [id], onDelete: Cascade)

  @@index([pagoId])
}

model Configuracion {
  id              Int     @id @default(autoincrement())
  nombreNegocio   String
  monedaPrincipal String  @default("USD")
  tasaUSD         Float?  @default(1)
  tasaVES         Float?
  tasaCOP         Float?
}